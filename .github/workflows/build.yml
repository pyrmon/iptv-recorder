name: Build and Test

on:
  push:
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'Release version')"
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN }}

      - name: Set up JDK 21
        uses: actions/setup-java@v5
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}

      - name: Set version for snapshot builds
        if: github.ref != 'refs/heads/main'
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          COMMIT_SHA=${GITHUB_SHA:0:7}
          mvn versions:set -DnewVersion="1.0.0-${BRANCH_NAME}-${COMMIT_SHA}-SNAPSHOT"

      - name: Increment version for main branch
        if: github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, 'Release version')
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          mvn build-helper:parse-version versions:set -DnewVersion='${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.nextIncrementalVersion}'
          NEW_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV

      - name: Run tests
        run: mvn test

      - name: Build application
        run: mvn clean package

      - name: Set up Docker Buildx
        if: github.ref == 'refs/heads/main'
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        if: github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, 'Release version')
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          docker buildx build --platform linux/amd64,linux/arm64 \
            -t ${{ secrets.DOCKER_USERNAME }}/iptv-recorder:${VERSION} \
            -t ${{ secrets.DOCKER_USERNAME }}/iptv-recorder:latest \
            --push .



      - name: Create release tag
        if: github.ref == 'refs/heads/main' && env.NEW_VERSION != '' && !contains(github.event.head_commit.message, 'Release version')
        run: |
          git add pom.xml
          git commit -m "Release version ${NEW_VERSION}"
          git tag -a "v${NEW_VERSION}" -m "Release version ${NEW_VERSION}"
          git push origin main --tags